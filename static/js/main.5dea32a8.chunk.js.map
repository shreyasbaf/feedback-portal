{"version":3,"sources":["assets/images/close.svg","assets/images/logo.svg","Redux/Store.ts","shared/styles/theme.ts","Redux/Root/constants.ts","Redux/Root/reducers.ts","Redux/User/constants.ts","Redux/User/reducers.ts","Redux/rootReducer.ts","modules/homepage/style.ts","modules/landing/style.ts","shared/components/table/styledTable.tsx","modules/landing/landing.tsx","Redux/Root/actions.ts","modules/homepage/homepage.tsx","modules/homepage/index.ts","shared/components/navbar/style.ts","modules/login/style.ts","modules/login/login.tsx","Redux/User/actions.ts","modules/login/index.ts","modules/signup/style.ts","modules/signup/signup.tsx","modules/signup/index.ts","shared/styles/styling.ts","shared/components/button/button.tsx","shared/components/navbar/navbar.tsx","shared/components/navbar/index.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["middleware","colors","theme","themeBackground","screenSizes","GlobalStyles","createGlobalStyle","FEEDBACK_POST_REQUEST","FEEDBACK_POST_SUCCESS","FEEDBACK_POST_FAIL","GET_FEEDBACKS_REQUEST","GET_FEEDBACKS_SUCCESS","GET_FEEDBACKS_FAIL","initialState","feedbackPostLoading","feedbackPostSuccess","feedbackPostFail","feedbacksLoading","allFeedbacks","feedbacksFail","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAIL","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_FAIL","LOGOUT","loginLoading","loginSuccess","sessionStorage","getItem","loginFail","signupLoading","signupSuccess","signupFail","rootReducer","combineReducers","user","state","action","type","payload","feedback","thunkMiddleware","thunk","store","createStore","applyMiddleware","baseURL","HomeContainer","styled","div","Card","Title","h1","FormWrapper","Input","input","Select","select","TextInput","textarea","Icons","i","SubmitButton","button","SubmitButtonIcon","GrayTableHead","thead","Col","LandingContainer","rowHeight","primaryLightWithAlpha","alpha","rgba","StyledTable","Landing","dispatch","useDispatch","useSelector","React","useState","tableData","setTableData","deskResponsive","useEffect","getState","a","axios","get","response","data","message","toast","loading","dismiss","renderTableHeading","heading","style","fontFamily","columns","Header","accessor","Cell","row","original","name","sortMethod","b","Number","width","email","category","onClick","swal","showPagination","defaultPageSize","minRows","resizable","showFilters","Homepage","props","setName","setEmail","setMessage","categoryName","setCategoryName","handleInput","event","value","target","success","isAdmin","placeholder","onChange","e","readOnly","className","hidden","cols","rows","alert","post","postFeedback","disabled","Logo","img","ButtonHolders","ModalBody","show","ModalContent","ModelHead","Close","form","Login","passWord","setPassWord","error","src","require","default","textAlign","onSubmit","preventDefault","then","console","log","login","userLogin","password","Signup","fullName","setFullName","userSignUP","ThreeColumns","buttonStyles","css","margin","background","color","Button","Navbar","setShow","marginTop","alt","App","toastOptions","border","padding","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5dea32a8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/close.ecf05d86.svg\";","export default __webpack_public_path__ + \"static/media/logo.1d3e0137.svg\";","import {createStore, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from './rootReducer'\n\nconst thunkMiddleware = [thunk]\n\n// remove composeWithDevTools in production\nconst composeWithDevTools = (middleware: any) => {\n  if (process.env.NODE_ENV !== 'production') {\n    const {composeWithDevTools} = require('redux-devtools-extension')\n    return composeWithDevTools(applyMiddleware(...middleware))\n  }\n  return applyMiddleware(...middleware)\n}\n\nconst store = createStore(rootReducer, composeWithDevTools(thunkMiddleware))\n\nexport {store}\n\nexport const baseURL = 'https://feedback-rapid.herokuapp.com'\n// export const baseURL = 'http://localhost:8080'\n\n","import {createGlobalStyle} from 'styled-components'\n\nexport interface Colors {\n  themeBackground: string\n}\n\nexport const colors: Colors = {\n  themeBackground:\n    'linear-gradient(90deg, rgba(249,179,203,1) 0%, rgba(225,163,225,1) 35%, rgba(196,145,251,1) 100%)',\n}\n\nexport interface ThemeStarter {\n  [propName: string]: string | undefined\n  themeBackground: string\n}\n\nexport const theme: ThemeStarter = {\n  themeBackground: colors.themeBackground,\n}\n\nexport interface ScreenSizes {\n  mediaS: number\n  mediaM: number\n  mediaL: number\n  mediaXL: number\n  mediaXXL: number\n  mediaLX: number\n  mediaLXX: number\n}\nexport const screenSizes: ScreenSizes = {\n  mediaS: 640,\n  mediaM: 800,\n  mediaL: 1024,\n  mediaXL: 1280,\n  mediaXXL: 1480,\n  mediaLX: 1800,\n  mediaLXX: 2000,\n}\n\nexport const GlobalStyles = createGlobalStyle<any>`\n  @import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;500;600;700&display=swap');\n  *, *::before, *::after {\n    box-sizing: border-box;\n  }\n  * {\n    margin: 0;\n  }\n  html, body {\n    height: 100%;\n  }\n  body {\n    line-height: 1.5;\n    -webkit-font-smoothing: antialiased;\n    font-family: 'Open Sans', sans-serif !important;\n    font-weight: 400 !important;\n    font-style: normal;\n    background: ${colors.themeBackground} !important;\n  }\n  img, picture, video, canvas, svg {\n    display: block;\n    max-width: 100%;\n  }\n  input, button, textarea, select {\n    font: inherit;\n  }\n  p, h1, h2, h3, h4, h5, h6 {\n    overflow-wrap: break-word;\n  }\n  #root, #__next {\n    isolation: isolate;\n  }\n`\n","export const FEEDBACK_POST_REQUEST: string = 'FEEDBACK_POST_REQUEST'\nexport const FEEDBACK_POST_SUCCESS: string = 'FEEDBACK_POST_SUCCESS'\nexport const FEEDBACK_POST_FAIL: string = 'FEEDBACK_POST_FAIL'\n\nexport const GET_FEEDBACKS_REQUEST: string = 'GET_FEEDBACKS_REQUEST'\nexport const GET_FEEDBACKS_SUCCESS: string = 'GET_FEEDBACKS_SUCCESS'\nexport const GET_FEEDBACKS_FAIL: string = 'GET_FEEDBACKS_FAIL'\n","import {\n  FEEDBACK_POST_FAIL,\n  FEEDBACK_POST_REQUEST,\n  FEEDBACK_POST_SUCCESS,\n  GET_FEEDBACKS_FAIL,\n  GET_FEEDBACKS_REQUEST,\n  GET_FEEDBACKS_SUCCESS,\n} from './constants'\n\ninterface initialStateTypes {\n  feedbackPostLoading: boolean\n  feedbackPostSuccess: string\n  feedbackPostFail: string\n  feedbacksLoading: boolean\n  allFeedbacks: {}[]\n  feedbacksFail: string\n}\n\nconst initialState: initialStateTypes = {\n  feedbackPostLoading: false,\n  feedbackPostSuccess: '',\n  feedbackPostFail: '',\n  feedbacksLoading: false,\n  allFeedbacks: [],\n  feedbacksFail: '',\n}\n\nexport const feedbackReducer = (state = initialState, action: any) => {\n  switch (action.type) {\n    case FEEDBACK_POST_REQUEST:\n      return {\n        ...state,\n        feedbackPostLoading: true,\n        feedbackPostFail: '',\n        feedbackPostSuccess: ''\n      }\n    case FEEDBACK_POST_SUCCESS:\n      return {\n        ...state,\n        feedbackPostLoading: false,\n        feedbackPostSuccess: action.payload,\n      }\n    case FEEDBACK_POST_FAIL:\n      return {\n        ...state,\n        feedbackPostLoading: false,\n        feedbackPostFail: action.payload,\n      }\n    case GET_FEEDBACKS_REQUEST:\n      return {\n        ...state,\n        feedbacksLoading: true,\n        feedbacksFail: '',\n      }\n    case GET_FEEDBACKS_SUCCESS:\n      return {\n        ...state,\n        feedbacksLoading: false,\n        allFeedbacks: action.payload,\n      }\n    case GET_FEEDBACKS_FAIL:\n      return {\n        ...state,\n        feedbacksLoading: false,\n        feedbacksFail: action.payload,\n      }\n\n    default:\n      return state\n  }\n}\n","export const LOGIN_REQUEST: string = 'LOGIN_REQUEST'\nexport const LOGIN_SUCCESS: string = 'LOGIN_SUCCESS'\nexport const LOGIN_FAIL: string = 'LOGIN_FAIL'\n\nexport const SIGNUP_REQUEST: string = 'SIGNUP_REQUEST'\nexport const SIGNUP_SUCCESS: string = 'SIGNUP_SUCCESS'\nexport const SIGNUP_FAIL: string = 'SIGNUP_FAIL'\nexport const LOGOUT: string = 'LOGOUT'\n","import {\n  LOGIN_FAIL,\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  SIGNUP_FAIL,\n  SIGNUP_REQUEST,\n  SIGNUP_SUCCESS,\n  LOGOUT,\n} from './constants'\n\ninterface initialStateTypes {\n  loginLoading: boolean\n  loginSuccess: string\n  loginFail: string\n  signupLoading: boolean\n  signupSuccess: string\n  signupFail: string\n}\n\nconst initialState: initialStateTypes = {\n  loginLoading: false,\n  loginSuccess: sessionStorage.getItem(\"loginSuccess\")||'',\n  loginFail: '',\n  signupLoading: false,\n  signupSuccess: '',\n  signupFail: '',\n}\nexport const userReducer = (state = initialState, action: any) => {\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return {\n        ...state,\n        loginLoading: true,\n        loginFail: '',\n        loginSuccess:''\n      }\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        loginSuccess: action.payload,\n        loginLoading: false,\n      }\n    case LOGIN_FAIL:\n      return {\n        ...state,\n        loginLoading: false,\n        loginFail: action.payload,\n      }\n    case SIGNUP_REQUEST:\n      return {\n        ...state,\n        signupLoading: true,\n        signupFail: '',\n      }\n    case SIGNUP_SUCCESS:\n      return {\n        ...state,\n        signupSuccess: action.payload,\n        signupLoading: false,\n      }\n    case SIGNUP_FAIL:\n      return {\n        ...state,\n        signupLoading: false,\n        signupFail: action.payload,\n      }\n    \n    case LOGOUT:\n      return{\n        ...state,\n        loginSuccess: '',\n      }\n\n    default:\n      return state\n  }\n}\n","import {combineReducers} from 'redux'\nimport {feedbackReducer} from './Root/reducers'\nimport {userReducer} from './User/reducers'\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  feedback: feedbackReducer,\n})\n\nexport default rootReducer\n","import styled from 'styled-components'\n\nexport const HomeContainer = styled.div`\n  margin-left: 15px;\n  margin-right: 15px;\n  @media only screen and (min-width: 640px) {\n    margin-left: 20%;\n    margin-right: 20%;\n  }\n`\n\nexport const Card = styled.div`\n  max-width: 450px;\n  background: #fff;\n  padding: 50px;\n  margin: 75px auto;\n  border-radius: 30px;\n  position: relative;\n`\nexport const Title = styled.h1`\n  color: #535274;\n  font-weight: bold !important;\n  letter-spacing: 3px;\n  margin-bottom: 25px;\n  text-align: center;\n  font-size: 22px;\n`\n\nexport const FormWrapper = styled.div`\n  width: 100%;\n`\n\nexport const Input = styled.input`\n  width: 100%;\n  margin-bottom: 12px;\n  padding: 15px 40px;\n  box-sizing: border-box;\n  background: #ebeef1;\n  border: 0px;\n  outline: none;\n  border-radius: 30px;\n  font-size: 14px;\n  color: #535274;\n  &::placeholder {\n    opacity: 1;\n    font-size: 14px;\n  }\n`\n\nexport const Select = styled.select`\n  width: 100%;\n  margin-bottom: 12px;\n  padding: 15px;\n  box-sizing: border-box;\n  background: #ebeef1;\n  border: 0px;\n  outline: none;\n  border-radius: 30px;\n  cursor: pointer;\n  font-size: 14px;\n  color: #535274;\n`\n\nexport const TextInput = styled.textarea`\n  width: 100%;\n  margin-bottom: 12px;\n  padding: 15px 40px;\n  box-sizing: border-box;\n  background: #ebeef1;\n  border: 0px;\n  outline: none;\n  border-radius: 30px;\n  height: 125px;\n  border-radius: 15px;\n  margin-bottom: 30px;\n  padding: 15px 15px;\n  resize: none;\n  font-size: 14px;\n  color: #535274;\n  &::placeholder {\n    opacity: 1;\n  }\n`\n\nexport const Icons = styled.i`\n  position: absolute;\n  left: 65px;\n  margin-top: 17px;\n  color: #535274;\n`\n\nexport const SubmitButton = styled.button`\n  background: #827ffe;\n  width: 100%;\n  text-align: center;\n  color: #fff;\n  padding: 12px;\n  border: none;\n  border-radius: 25px;\n  cursor: pointer;\n`\n\nexport const SubmitButtonIcon = styled.i`\n  margin-left: 10px;\n  font-size: 12px;\n`\n","import styled, {css, keyframes} from 'styled-components'\n\nexport const GrayTableHead = styled.thead`\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 20px;\n  color: #212241;\n`\n\nexport const Col = styled.div`\n  font-style: normal;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 18px;\n  color: #a09fa2;\n`\nexport const LandingContainer = styled.div`\n  color: #212241;\n  @media only screen and (min-width: 640px) {\n    margin-left: 10%;\n    margin-right: 10%;\n  }\n`\n","import styled from 'styled-components'\nimport {rgba} from 'polished'\n\nconst rowHeight = `50px`\nconst primaryLightWithAlpha = (alpha: number) => rgba(255, 255, 255, alpha)\n\nexport const StyledTable = styled.div<any>`\n  transition: width 600ms ease-out, height 600ms ease-out;\n  padding-top: 24px;\n  color: #212241;\n\n  .ReactTable {\n    position: relative;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: column;\n\n    flex-direction: column;\n    color: #212241;\n\n    clear: both;\n    border: none;\n  }\n  .ReactTable * {\n    box-sizing: border-box;\n  }\n  .ReactTable .rt-table {\n    -webkit-box-flex: 1;\n    -ms-flex: auto 1;\n    flex: auto 1;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: column;\n    flex-direction: column;\n    -webkit-box-align: stretch;\n    -ms-flex-align: stretch;\n    align-items: stretch;\n    width: 100%;\n    border-collapse: collapse;\n    overflow-x: hidden;\n  }\n  .ReactTable .rt-thead {\n    -webkit-box-flex: 1;\n    -ms-flex: 1 0 auto;\n    flex: 1 0 auto;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: ${rowHeight};\n    -webkit-box-orient: horizontal;\n    flex-direction: row;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: row;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    background: rgba(186, 169, 255, 0.07);\n  }\n  .ReactTable .rt-thead.-headerGroups {\n    background: '#6B00D7';\n  }\n  .ReactTable .rt-thead.-filters {\n    border-bottom: 1px solid rgba(0, 0, 0, 0.05);\n  }\n  .ReactTable .rt-thead.-filters input,\n  .ReactTable .rt-thead.-filters select {\n    border: 1px solid rgba(0, 0, 0, 0.1);\n    background: #fff;\n    padding: 15px 7px;\n    font-size: inherit;\n    border-radius: 3px;\n    font-weight: normal;\n    outline: none;\n  }\n  .ReactTable .rt-thead.-filters .rt-th {\n    border-right: 1px solid rgba(0, 0, 0, 0.02);\n    text-align: start;\n  }\n  .ReactTable .rt-thead.-header {\n    // border-bottom: 1px solid ${primaryLightWithAlpha(0.1)};\n  }\n  .ReactTable .rt-thead .rt-tr {\n    text-align: center;\n  }\n\n  .ReactTable .rt-thead .rt-th.-sort-asc {\n    box-shadow: none;\n  }\n  .ReactTable .rt-tbody .rt-tr-group {\n  }\n  .ReactTable .rt-thead .rt-th,\n  .rt-tr.-odd .ReactTable .rt-thead .rt-td {\n    padding: 5px 5px;\n    line-height: normal;\n    position: relative;\n    text-align: right;\n  }\n  .ReactTable .rt-thead .rt-th.-cursor-pointer,\n  .ReactTable .rt-thead .rt-td.-cursor-pointer {\n    cursor: pointer;\n  }\n  .ReactTable .rt-thead .rt-th:last-child,\n  .ReactTable .rt-thead .rt-td:last-child {\n    border-right: 0;\n  }\n  .ReactTable .rt-thead .rt-th:focus {\n    outline: none;\n  }\n  .ReactTable .rt-thead .rt-resizable-header {\n    text-align: start;\n    overflow: visible;\n  }\n  .ReactTable .rt-thead .rt-resizable-header:last-child {\n    overflow: hidden;\n  }\n  .ReactTable .rt-thead .rt-resizable-header-content {\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n  .ReactTable .rt-thead .rt-header-pivot {\n    border-right-color: #f7f7f7;\n  }\n  .ReactTable .rt-thead .rt-header-pivot:after,\n  .ReactTable .rt-thead .rt-header-pivot:before {\n    left: 100%;\n    top: 50%;\n    border: solid transparent;\n    content: ' ';\n    height: 0;\n    width: 0;\n    position: absolute;\n    pointer-events: none;\n  }\n  .ReactTable .rt-thead .rt-header-pivot:after {\n    border-color: rgba(255, 255, 255, 0);\n    border-left-color: #fff;\n    border-width: 8px;\n    margin-top: -8px;\n  }\n  .ReactTable .rt-thead .rt-header-pivot:before {\n    border-color: rgba(102, 102, 102, 0);\n    border-left-color: #f7f7f7;\n    border-width: 10px;\n    margin-top: -10px;\n  }\n  .ReactTable .rt-tbody {\n    -webkit-box-flex: 1;\n    -ms-flex: 1 1 auto;\n    flex: 1 1 auto;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: column;\n    flex-direction: column;\n    background: #212241;\n  }\n  .ReactTable .rt-tbody .rt-tr-group:last-child {\n    border-bottom: 0;\n  }\n  .ReactTable .rt-tbody .rt-tr.-odd {\n    background: #2b2b4d;\n    border-radius: 3px;\n  }\n  .ReactTable .rt-tbody .rt-td {\n    display: flex;\n    align-items: right;\n    height: ${rowHeight};\n    border-right: 1px solid rgba(0, 0, 0, 0.02);\n  }\n  .ReactTable .rt-tbody .rt-td:last-child {\n    border-right: 0;\n    width: auto;\n  }\n  .ReactTable .rt-tbody .rt-expandable {\n    cursor: auto !important;\n    text-overflow: clip;\n    overflow: visible;\n    > div {\n      overflow-x: visible;\n    }\n  }\n  .ReactTable .rt-tr-group {\n    -webkit-box-flex: 1;\n    -ms-flex: 1 0 auto;\n    flex: 1 0 auto;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: column;\n    flex-direction: column;\n    -webkit-box-align: stretch;\n    -ms-flex-align: stretch;\n    align-items: stretch;\n    border-bottom: 2px solid #413764;\n    border-bottom: 1px solid #232222;\n  }\n  .ReactTable .rt-tr {\n    -webkit-box-flex: 1;\n    -ms-flex: 1 0 auto;\n    flex: 1 0 auto;\n    display: -ms-inline-flexbox;\n    display: inline-flex;\n    align-items: center;\n    justify-content: space-around;\n  }\n  .ReactTable .rt-th,\n  .ReactTable .rt-td {\n    flex: 1;\n    align-items: center;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow-x: hidden;\n    padding: 5px;\n    overflow: hidden;\n    transition: 0.3s ease;\n    transition-property: width, min-width, padding, opacity;\n    > div,\n    > div span {\n      text-overflow: ellipsis;\n      overflow-x: hidden;\n    }\n  }\n  .ReactTable .rt-th.-hidden,\n  .ReactTable .rt-td.-hidden {\n    width: 0 !important;\n    min-width: 0 !important;\n    padding: 0 !important;\n    border: 0 !important;\n    opacity: 0 !important;\n  }\n  .ReactTable .rt-expander {\n    display: inline-block;\n    position: relative;\n    margin: 0;\n    color: transparent;\n    margin: 0 10px;\n  }\n  .ReactTable .rt-expander:after {\n    content: '';\n    position: absolute;\n    width: 0;\n    height: 0;\n    top: 50%;\n    left: 50%;\n    -webkit-transform: translate(-50%, -50%) rotate(-90deg);\n    transform: translate(-50%, -50%) rotate(-90deg);\n    border-left: 5.04px solid transparent;\n    border-right: 5.04px solid transparent;\n    border-top: 7px solid rgba(0, 0, 0, 0.8);\n    transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n    cursor: pointer;\n  }\n  .ReactTable .rt-expander.-open:after {\n    -webkit-transform: translate(-50%, -50%) rotate(0);\n    transform: translate(-50%, -50%) rotate(0);\n  }\n  .ReactTable .rt-resizer {\n    display: inline-block;\n    position: absolute;\n    width: 36px;\n    top: 0;\n    bottom: 0;\n    right: -18px;\n    cursor: col-resize;\n    z-index: 10;\n  }\n  .ReactTable .rt-tfoot {\n    -webkit-box-flex: 1;\n    -ms-flex: 1 0 auto;\n    border-bottom: 1px solid ${primaryLightWithAlpha(0.1)};\n    border-top: 1px solid ${primaryLightWithAlpha(0.1)};\n    height: ${rowHeight};\n    flex: 1 0 auto;\n    flex-direction: row;\n    align-items: center;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: row;\n    color: #212241;\n  }\n  .ReactTable .rt-tfoot .rt-td {\n    border-right: 1px solid rgba(0, 0, 0, 0.05);\n  }\n  .ReactTable .rt-tfoot .rt-td:last-child {\n    border-right: 0;\n  }\n  .ReactTable.-highlight .rt-tbody .rt-tr:not(.-padRow):hover {\n    background: '#6B00D7';\n  }\n  .ReactTable .-pagination {\n    z-index: 1;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-pack: justify;\n    -ms-flex-pack: justify;\n    justify-content: space-between;\n    -webkit-box-align: stretch;\n    -ms-flex-align: stretch;\n    align-items: stretch;\n    -ms-flex-wrap: wrap;\n    flex-wrap: wrap;\n    padding: 3px;\n    border-top: 2px solid rgba(0, 0, 0, 0.1);\n    color: #212241;\n  }\n  .ReactTable .-pagination input,\n  .ReactTable .-pagination select {\n    background: inherit;\n    height: 30px;\n    padding: 5px 7px;\n    font-size: inherit;\n    border-radius: 3px;\n    font-weight: normal;\n    outline: none;\n    border: 0;\n  }\n  .ReactTable .-pagination .-btn {\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    appearance: none;\n    display: block;\n    width: 100%;\n    border: 0;\n    border-radius: 3px;\n    padding: 6px;\n    font-size: 1em;\n    background: inherit;\n    transition: all 0.1s ease;\n    cursor: pointer;\n    outline: none;\n  }\n  .ReactTable .-pagination .-btn[disabled] {\n    opacity: 0.5;\n    cursor: default;\n  }\n  .-next > button {\n    text-align: right;\n  }\n  .-previous > button {\n    text-align: left;\n  }\n  .ReactTable .-pagination .-previous,\n  .ReactTable .-pagination .-next {\n    text-align: center;\n  }\n  .ReactTable .-pagination .-center {\n    -webkit-box-flex: 1.5;\n    -ms-flex: 1.5;\n    flex: 1.5;\n    text-align: center;\n    margin-bottom: 0;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: row;\n    flex-direction: row;\n    -ms-flex-wrap: wrap;\n    flex-wrap: wrap;\n    -webkit-box-align: center;\n    -ms-flex-align: center;\n    align-items: center;\n    justify-content: space-around;\n  }\n  .ReactTable .-pagination .-pageInfo {\n    display: inline-block;\n    margin: 3px 10px;\n    white-space: nowrap;\n    color: #212241;\n\n    input {\n      margin-bottom: 0 !important;\n    }\n  }\n  .ReactTable .-pagination .-pageJump {\n    width: 18px;\n    display: inline-block;\n  }\n  .ReactTable .-pagination .-pageJump input {\n    width: 70px;\n    text-align: start;\n    color: #212241;\n    font-weight: 700;\n    -moz-appearance: textfield;\n    ::-webkit-outer-spin-button,\n    ::-webkit-inner-spin-button {\n      -webkit-appearance: none;\n      margin: 0;\n    }\n  }\n  .ReactTable .-pagination .-pageSizeOptions {\n    margin: 3px 10px;\n    position: absolute;\n    left: 0;\n    bottom: -20px;\n    color: #212241;\n\n    :before {\n      cursor: initial;\n      content: 'showing:';\n    }\n    select {\n      margin-bottom: 0;\n      color: white;\n      background-color: #312964;\n    }\n  }\n  .ReactTable .rt-noData {\n    width: 100%;\n    text-align: center;\n    display: block;\n    position: absolute;\n    left: 50%;\n    top: 100%;\n    -webkit-transform: translate(-50%, -50%);\n    transform: translate(-50%, -50%);\n    background: rgba(255, 255, 255, 0.8);\n    transition: all 0.3s ease;\n    z-index: 1;\n    pointer-events: none;\n    padding: 20px;\n    color: rgba(0, 0, 0, 0.5);\n  }\n  .ReactTable .-loading {\n    display: block;\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    background: rgba(255, 255, 255, 0.8);\n    transition: all 0.3s ease;\n    z-index: -1;\n    opacity: 0;\n    pointer-events: none;\n  }\n  .ReactTable .-loading > div {\n    position: absolute;\n    display: block;\n    text-align: center;\n    width: 100%;\n    top: 50%;\n    left: 0;\n    font-size: 15px;\n    color: rgba(0, 0, 0, 0.6);\n    -webkit-transform: translateY(-52%);\n    transform: translateY(-52%);\n    transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n  }\n  .ReactTable .-loading.-active {\n    opacity: 1;\n    z-index: 2;\n    pointer-events: all;\n  }\n  .ReactTable .-loading.-active > div {\n    -webkit-transform: translateY(50%);\n    transform: translateY(50%);\n  }\n  .ReactTable .rt-resizing .rt-th,\n  .ReactTable .rt-resizing .rt-td {\n    transition: none !important;\n    cursor: col-resize;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n  }\n`\n","import React, {useEffect} from 'react'\nimport {GrayTableHead, Col, LandingContainer} from './style'\nimport ReactTable from 'react-table'\nimport {StyledTable} from '../../shared/components/table/styledTable'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {getAllFeedbacks} from '../../Redux/Root/actions'\nimport toast from 'react-hot-toast'\nimport { Close, ModalBody, ModalContent, ModelHead } from '../login/style'\nimport swal from 'sweetalert'\n\nconst Landing = () => {\n  const dispatch = useDispatch()\n  const {allFeedbacks, feedbacksLoading} = useSelector(\n    (state: any) => state.feedback\n  )\n  const [tableData, setTableData] = React.useState([])\n  const [deskResponsive, setDeskResponsive] = React.useState(false)\n\n  useEffect(() => {\n    dispatch(getAllFeedbacks())\n  }, [])\n  useEffect(() => {\n    if (allFeedbacks) {\n      setTableData(allFeedbacks)\n    }\n  }, [allFeedbacks])\n  useEffect(() => {\n    if (feedbacksLoading) {\n      toast.loading('Loading...')\n    } else {\n      toast.dismiss()\n    }\n  }, [feedbacksLoading])\n\n  const renderTableHeading = (heading: any) => {\n    return (\n      <GrayTableHead style={{fontFamily: 'Regular'}}>{heading}</GrayTableHead>\n    )\n  }\n  const [show, setShow] = React.useState(true)\n\n  const closeModal = () =>{\n    setShow(false);\n  }\n\n  // show={show == \"login\" ? true : false} Close={() => Close()} \n  const showFeedback = (feedback: any) =>{\n      swal(feedback);\n  }\n  return (\n    <>\n      <LandingContainer>\n        <StyledTable>\n          {/* @ts-ignore */}\n          <ReactTable\n            data={tableData}\n            columns={[\n              {\n                Header: <div>{renderTableHeading('Name')}</div>,\n                accessor: 'date',\n                Cell: (row: any) => (\n                  <Col>\n                    <div>{row.original.name}</div>\n                  </Col>\n                ),\n                sortMethod: (a: any, b: any) => Number(b) - Number(a),\n                width: deskResponsive ? 130 : 140,\n              },\n              {\n                Header: <div>{renderTableHeading('Email')}</div>,\n                accessor: 'pair',\n                Cell: (row: any) => (\n                  <Col>\n                    <div>{row.original.email}</div>\n                  </Col>\n                ),\n                sortMethod: (a: any, b: any) => Number(b) - Number(a),\n                width: deskResponsive ? 90 : 140,\n              },\n              {\n                Header: renderTableHeading(`Category`),\n                accessor: 'side',\n                Cell: (row: any) => (\n                  <Col>\n                    <div>{row.original.category}</div>\n                  </Col>\n                ),\n                sortMethod: (a: any, b: any) => Number(b) - Number(a),\n                width: deskResponsive ? 90 : 120,\n              },\n              {\n                Header: renderTableHeading(`Message`),\n                accessor: 'side',\n                Cell: (row: any) => (\n                  <Col onClick={() =>{showFeedback(row.original.feedback)}}>\n                    <div>{row.original.feedback}</div>\n                  </Col>\n                ),\n                sortMethod: (a: any, b: any) => Number(b) - Number(a),\n                width: deskResponsive ? 90 : 120,\n              },\n            ]}\n            showPagination={true}\n            defaultPageSize={10}\n            minRows={0}\n            resizable={false}\n            // sortable={true}\n            // multiSort={true}\n            showFilters={true}\n          />\n        </StyledTable>\n      </LandingContainer>\n    </>\n  )\n}\nexport default Landing\n","import axios from 'axios'\nimport {baseURL} from '../Store'\nimport {\n  FEEDBACK_POST_FAIL,\n  FEEDBACK_POST_REQUEST,\n  FEEDBACK_POST_SUCCESS,\n  GET_FEEDBACKS_FAIL,\n  GET_FEEDBACKS_REQUEST,\n  GET_FEEDBACKS_SUCCESS,\n} from './constants'\n\nexport const postFeedback =\n  (data: any) => async (dispatch: any, getState: any) => {\n    try {\n      dispatch({\n        type: FEEDBACK_POST_REQUEST,\n      })\n      await axios.post(`${baseURL}/add-feedbacks`, data)\n      dispatch({\n        type: FEEDBACK_POST_SUCCESS,\n        payload: 'success',\n      })\n    } catch (error: any) {\n      dispatch({\n        type: FEEDBACK_POST_FAIL,\n        payload: error?.message,\n      })\n    }\n  }\n\nexport const getAllFeedbacks = () => async (dispatch: any, getState: any) => {\n  try {\n    dispatch({\n      type: GET_FEEDBACKS_REQUEST,\n    })\n    const response = await axios.get(`${baseURL}/all-feedbacks`)\n    dispatch({\n      type: GET_FEEDBACKS_SUCCESS,\n      payload: response.data,\n    })\n  } catch (error: any) {\n    dispatch({\n      type: GET_FEEDBACKS_FAIL,\n      payload: error?.message,\n    })\n  }\n}\n","import {useEffect, useState} from 'react'\nimport {dispatch} from 'react-hot-toast/dist/core/store'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {postFeedback} from '../../Redux/Root/actions'\nimport toast from 'react-hot-toast'\n\nimport {\n  HomeContainer,\n  Card,\n  Title,\n  FormWrapper,\n  Input,\n  Select,\n  TextInput,\n  Icons,\n  SubmitButton,\n  SubmitButtonIcon,\n} from './style'\nimport Landing from '../landing/landing'\n\nconst Homepage = (props: any) => {\n  const dispatch = useDispatch()\n  const {feedbackPostSuccess, feedbackPostLoading} = useSelector(\n    (state: any) => state.feedback\n  )\n  const {loginSuccess} = useSelector((state: any) => state.user)\n\n  const [name, setName] = useState<string>('')\n  const [email, setEmail] = useState<any>('')\n  const [message, setMessage] = useState<string>('')\n  const [categoryName, setCategoryName] = useState<string>('')\n\n  const handleInput = (event: any, type: string) => {\n    const {value} = event.target\n    if (type === 'name') {\n      setName(value)\n    } else if (type === 'email') {\n      setEmail(value)\n    } else if (type === 'category') {\n      setCategoryName(value)\n    } else {\n      setMessage(value)\n    }\n  }\n\n  const handleSubmit = () => {\n    if (name === '' || email === '' || message === '') {\n      setName('')\n      setEmail('')\n      setMessage('')\n      alert('All fields are mandatory!')\n    } else {\n      const data = {name, email, feedback: message, category: categoryName}\n      dispatch(postFeedback(data))\n    }\n  }\n\n  useEffect(() => {\n    if (feedbackPostSuccess === 'success') {\n      toast.success('Successfully Submitted!')\n      setName('')\n      setEmail('')\n      setMessage('')\n      setCategoryName('')\n    } else {\n      toast.dismiss()\n    }\n  }, [feedbackPostSuccess])\n\n  useEffect(() => {\n    if(loginSuccess !== ''){\n      setName(loginSuccess.name)\n      setEmail(loginSuccess.email)\n    }else {\n      // sessionStorage.clear();\n      setName('')\n      setEmail('')\n    }\n  }, [loginSuccess])\n\n  return (<>\n      { loginSuccess.isAdmin ? <Landing /> : \n    <HomeContainer>\n      <Card>\n        <Title>We value your feedback</Title>\n        <FormWrapper>\n          <Input\n            type='text'\n            placeholder='Name'\n            value={name}\n            onChange={(e) => handleInput(e, 'name')}\n            readOnly\n          />\n          <Icons className='fas fa-user'></Icons>\n          <Input\n            type='email'\n            placeholder='Email'\n            value={email}\n            onChange={(e) => handleInput(e, 'email')}\n            readOnly\n          />\n          <Icons className='fas fa-envelope'></Icons>\n          <Select\n            value={categoryName}\n            onChange={(e) => handleInput(e, 'category')}\n          >\n            <option hidden={true}>Select Category</option>\n            <option value='blockchain'>Blockchain</option>\n            <option value='frontend'>Frontend</option>\n            <option value='styled_components'>Styled Components</option>\n            <option value='others'>Others</option>\n          </Select>\n          {/* <Icons className='fas fa-envelope'></Icons> */}\n          <TextInput\n            placeholder='Message.....'\n            cols={30}\n            rows={10}\n            value={message}\n            onChange={(e) => handleInput(e, 'message')}\n          />\n          <SubmitButton onClick={handleSubmit} disabled={feedbackPostLoading}>\n            {feedbackPostLoading ? 'Submitting...' : 'Submit'}\n            <SubmitButtonIcon\n              className={\n                feedbackPostLoading ? 'fas fa-spinner' : 'fas fa-arrow-right'\n              }\n            ></SubmitButtonIcon>\n          </SubmitButton>\n        </FormWrapper>\n      </Card>\n    </HomeContainer>\n      }\n      </>\n  )\n}\nexport default Homepage\n","import Homepage from \"./homepage\";\n\nexport default Homepage;\n","import styled from \"styled-components\";\n\nexport const Logo = styled.img`\n  width: 186px;\n  height: 86px;\n  @media only screen and (max-width: 600px) {\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\n\nexport const ButtonHolders = styled.div`\n  display: grid;\n  grid-template-columns: auto auto;\n  grid-gap: 25px;\n  margin: 20px 15px 15px 15px;\n`;\n","import styled from \"styled-components\";\n\ninterface ModalBodyProps {\n  show: boolean;\n}\n\nexport const ModalBody = styled.div<ModalBodyProps>`\n  display: ${(props) => (props.show ? \"block\" : \"none\")};\n  position: fixed;\n  z-index: 100000;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  background: rgba(15, 16, 23, 0.9);\n`;\n\nexport const ModalContent = styled.div<any>`\n  padding: 20px;\n  background-color: white;\n  display: inline-block;\n  border-radius: 8px;\n  margin: 0 auto;\n  border: none;\n  border-radius: 4px;\n  overflow: visible;\n  // min-width: 280px;\n  position: absolute;\n  left: 50%;\n  right: 50%;\n  top: 35%;\n  transform: translate(-50%, -50%);\n  max-height: 100%;\n  // overflow-y: auto;\n  ::-webkit-scrollbar {\n    width: 0 !important;\n  }\n  overflow: -moz-scrollbars-none;\n  -ms-overflow-style: none;\n  width: 80%;\n  @media (min-width: 426px) {\n    width: 450px;\n  }\n  h5 {\n    font-weight: 400;\n    font-size: 12px;\n    line-height: 25px;\n    color: #8499ae;\n    margin: 0;\n    @media (min-width: 300px) {\n      font-size: 20px;\n      line-height: 30px;\n    }\n  }\n`;\n\nexport const ModelHead = styled.div`\n  color: black;\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 10px;\n  h2 {\n    font-weight: 600;\n    font-size: 16px;\n    line-height: 25px;\n    color: #8499ae;\n    margin: 0;\n    @media (min-width: 300px) {\n      font-size: 20px;\n      line-height: 30px;\n    }\n  }\n`;\n\nexport const Close = styled.img`\n  cursor: pointer;\n  width: 20px;\n  :hover {\n    width: 25px;\n  }\n`;\n\nexport const FormWrapper = styled.form`\n  width: 100%;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  margin-bottom: 12px;\n  padding: 15px 40px;\n  box-sizing: border-box;\n  background: #ebeef1;\n  border: 0px;\n  outline: none;\n  border-radius: 30px;\n  font-size: 14px;\n`;\n\nexport const SubmitButton = styled.button`\n  background: #827ffe;\n  width: 100%;\n  text-align: center;\n  color: #fff;\n  padding: 12px;\n  border: none;\n  border-radius: 25px;\n  cursor: pointer;\n`;\nexport const SubmitButtonIcon = styled.i`\n  margin-left: 10px;\n  font-size: 12px;\n`;\n\nexport const Icons = styled.i`\n  position: absolute;\n  margin-top: 17px;\n  left: 35px;\n  color: #9a99aa;\n`;\n","import {useEffect, useState} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport toast from 'react-hot-toast'\n\nimport {\n  ModalBody,\n  ModalContent,\n  ModelHead,\n  Close,\n  FormWrapper,\n  Input,\n  SubmitButtonIcon,\n  SubmitButton,\n  Icons,\n} from './style'\nimport { userLogin } from '../../Redux/User/actions'\n\nconst Login = (props: any) => {\n  const dispatch = useDispatch();\n  const {loginSuccess, loginLoading,loginFail} = useSelector(\n    (state: any) => state.user\n  )\n  const [email, setEmail] = useState<string>('')\n  const [passWord, setPassWord] = useState<string>('')\n\n  const submitLoginForm = (e: any) => {\n    e.preventDefault();\n    if ( email === '' || passWord === '') {\n      alert('All fields are mandatory!')\n    } else {\n      const data = {email, password:passWord}\n      dispatch(userLogin(data))\n    }\n  }\n\n  useEffect(() => {\n    if (loginSuccess !== '') {\n      props.Close()\n      toast.success('Successfully Logged In!')\n      setEmail('')\n      setPassWord('')\n\n    } else if (loginFail === 'error' ){\n      props.Close()\n      toast.error('Error Logging In!')\n    } \n    else {\n      toast.dismiss()\n    }\n  }, [loginSuccess,loginFail])\n\n  return (\n    <div>\n      <ModalBody show={props.show}>\n        <ModalContent>\n          <ModelHead>\n            <h2>Login</h2>\n            <Close\n              onClick={props.Close}\n              src={require('../../assets/images/close.svg').default}\n            />\n          </ModelHead>\n          <h5 style={{textAlign: 'center'}}>Log in to exsisting account </h5>\n          <br />\n          <FormWrapper onSubmit={submitLoginForm}>\n            <Input\n              placeholder='Email'\n              type='email'\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <Icons className='fas fa-envelope'></Icons>\n            <Input\n              placeholder='Password'\n              type='password'\n              value={passWord}\n              onChange={(e) => setPassWord(e.target.value)}\n            />\n            <Icons className='fas fa-lock-open'></Icons>\n\n            <SubmitButton type=\"submit\" disabled={loginLoading}>\n            {loginLoading ? 'Logging In...' : 'Login'}\n            <SubmitButtonIcon\n              className={\n                loginLoading ? 'fas fa-spinner' : 'fas fa-arrow-right'\n              }\n            ></SubmitButtonIcon>\n          </SubmitButton>\n          </FormWrapper>\n        </ModalContent>\n      </ModalBody>\n    </div>\n  )\n}\n\nexport default Login\n","import {\n  LOGIN_FAIL,\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  SIGNUP_FAIL,\n  SIGNUP_REQUEST,\n  SIGNUP_SUCCESS,\n  LOGOUT,\n} from './constants'\nimport {baseURL} from '../Store'\nimport axios from 'axios'\n\nexport const userLogin = (data:any) => async (dispatch: any, getState: any) => {\n  try {\n    dispatch({\n      type: LOGIN_REQUEST,\n    })\n    await axios.post(`${baseURL}/userlogin`, data)\n    .then((response) => {\n      console.log(response.data);\n      if(response.data.login === 'success'){\n        dispatch({\n          type: LOGIN_SUCCESS,\n          payload:response.data\n        })}\n        else{\n          dispatch({\n            type: LOGIN_FAIL,\n            payload: 'error',\n          })\n        }\n      })\n  }\n catch (error: any) {\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: error?.message,\n    })\n  }\n}\n\nexport const userSignUP = (data: any) => async (dispatch: any, getState: any) => {\n  try {\n    dispatch({\n      type: SIGNUP_REQUEST,\n    })\n    await axios.post(`${baseURL}/add-user`, data)\n    .then((response) => {\n      console.log(response);\n  })\n    dispatch({\n      type: SIGNUP_SUCCESS,\n      payload:'success'\n    })\n  } catch (error: any) {\n    dispatch({\n      type: SIGNUP_FAIL,\n      payload: error?.message,\n    })\n  }\n}\n\nexport const userLogout = () => async (dispatch: any, getState: any) => {\n    dispatch({\n      type: LOGOUT\n    })\n  } ","import Login from \"./login\";\n\nexport default Login;\n","import styled from 'styled-components'\n\ninterface ModalBodyProps {\n  show: boolean\n}\n\nexport const ModalBody = styled.div<ModalBodyProps>`\n  display: ${(props) => (props.show ? 'block' : 'none')};\n  position: fixed;\n  z-index: 100000;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  background: rgba(15, 16, 23, 0.9);\n`\n\nexport const ModalContent = styled.div<any>`\n  padding: 20px;\n  background-color: white;\n  display: inline-block;\n  border-radius: 8px;\n  margin: 0 auto;\n  border: none;\n  border-radius: 4px;\n  overflow: visible;\n  // min-width: 280px;\n  position: absolute;\n  left: 50%;\n  right: 50%;\n  top: 35%;\n  transform: translate(-50%, -50%);\n  max-height: 100%;\n  // overflow-y: auto;\n  ::-webkit-scrollbar {\n    width: 0 !important;\n  }\n  overflow: -moz-scrollbars-none;\n  -ms-overflow-style: none;\n  width: 80%;\n  @media (min-width: 425px) {\n    width: 450px;\n  }\n  h5 {\n    font-weight: 400;\n    font-size: 12px;\n    line-height: 25px;\n    color: #8499ae;\n    margin: 0;\n    @media (min-width: 300px) {\n      font-size: 20px;\n      line-height: 30px;\n    }\n  }\n`\n\nexport const ModelHead = styled.div`\n  color: black;\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 10px;\n  h2 {\n    font-weight: 600;\n    font-size: 16px;\n    line-height: 25px;\n    color: #8499ae;\n    margin: 0;\n    @media (min-width: 300px) {\n      font-size: 20px;\n      line-height: 30px;\n    }\n  }\n`\n\nexport const Close = styled.img`\n  cursor: pointer;\n  width: 20px;\n  :hover {\n    width: 25px;\n  }\n`\nexport const FormWrapper = styled.form`\n  width: 100%;\n`\nexport const Input = styled.input`\n  width: 100%;\n  margin-bottom: 12px;\n  padding: 15px 40px;\n  box-sizing: border-box;\n  background: #ebeef1;\n  border: 0px;\n  outline: none;\n  border-radius: 30px;\n  font-size: 14px;\n`\nexport const SubmitButton = styled.button`\n  background: #827ffe;\n  width: 100%;\n  text-align: center;\n  color: #fff;\n  padding: 12px;\n  border: none;\n  border-radius: 25px;\n  cursor: pointer;\n`\nexport const SubmitButtonIcon = styled.i`\n  margin-left: 10px;\n  font-size: 12px;\n`\nexport const Icons = styled.i`\n  position: absolute;\n  margin-top: 17px;\n  left: 35px;\n  color: #9a99aa;\n`\n","import {useEffect, useState} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport { userSignUP } from '../../Redux/User/actions'\nimport toast from 'react-hot-toast'\n\nimport {\n  ModalBody,\n  ModalContent,\n  ModelHead,\n  Close,\n  FormWrapper,\n  Input,\n  SubmitButtonIcon,\n  SubmitButton,\n  Icons,\n} from './style'\n\nconst Signup = (props: any) => {\n  const dispatch = useDispatch();\n  const {signupSuccess, signupLoading} = useSelector(\n    (state: any) => state.user\n  )\n  const [fullName, setFullName] = useState<string>('')\n  const [email, setEmail] = useState<string>('')\n  const [passWord, setPassWord] = useState<string>('')\n\n  const submitSignUpForm = (e: any) => {\n    if (fullName === '' || email === '' || passWord === '') {\n      alert('All fields are mandatory!')\n    } else {\n      const data = {name:fullName, email, password:passWord}\n      dispatch(userSignUP(data))\n    }\n  }\n\n  useEffect(() => {\n    if (signupSuccess === 'success') {\n      props.Close()\n      toast.success('Acount Created Successfully!')\n      setFullName('')\n      setEmail('')\n      setPassWord('')\n    } else {\n      toast.dismiss()\n    }\n  }, [signupSuccess])\n  return (\n    <div>\n      <ModalBody show={props.show}>\n        <ModalContent>\n          <ModelHead>\n            <h2>Signup</h2>\n            <Close\n              onClick={props.Close}\n              src={require('../../assets/images/close.svg').default}\n            />\n          </ModelHead>\n          <h5 style={{textAlign: 'center'}}>Create a new account </h5>\n          <br />\n          <FormWrapper>\n            <Input\n              placeholder='Full Name'\n              type='text'\n              value={fullName}\n              onChange={(e) => setFullName(e.target.value)}\n            />\n            <Icons className='fas fa-user'></Icons>\n            <Input\n              placeholder='Email'\n              type='email'\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <Icons className='fas fa-envelope'></Icons>\n            <Input\n              placeholder='Password'\n              type='password'\n              value={passWord}\n              onChange={(e) => setPassWord(e.target.value)}\n            />\n            <Icons className='fas fa-lock-open'></Icons>\n            <SubmitButton onClick={submitSignUpForm} disabled={signupLoading}>\n            {signupLoading ? 'Submitting...' : 'Submit'}\n            <SubmitButtonIcon\n              className={\n                signupLoading ? 'fas fa-spinner' : 'fas fa-arrow-right'\n              }\n            ></SubmitButtonIcon>\n          </SubmitButton>\n          </FormWrapper>\n        </ModalContent>\n      </ModalBody>\n    </div>\n  )\n}\n\nexport default Signup\n","import Signup from \"./signup\";\n\nexport default Signup;\n","import styled from \"styled-components\";\nimport { colors, screenSizes } from \"./theme\";\n\nexport interface ButtonAreaProps {\n  gradient?: string;\n  disabled?: boolean;\n}\nexport const MainContainer = styled.div`\n  width: 85%;\n  margin: 0 auto;\n  @media (min-width: ${screenSizes.mediaM}px) {\n    width: 70%;\n    margin: 0 auto;\n  }\n`;\n\nexport const ThreeColumns = styled.div`\n  display: grid;\n  grid-gap: 0px;\n  /* grid-template-columns: repeat(1, 1fr); */\n  @media (min-width: ${screenSizes.mediaS}px) {\n    grid-gap: 8px;\n    grid-template-columns: repeat(3, 1fr);\n  }\n\n  @media (min-width: ${screenSizes.mediaL}px) {\n    grid-gap: 15px;\n    grid-template-columns: repeat(3, 1fr);\n  }\n  @media (min-width: ${screenSizes.mediaXL}px) {\n    grid-gap: 195px;\n    grid-template-columns: repeat(3, 1fr);\n  }\n`;\n\nexport const TwoColumns = styled.div`\n  display: grid;\n  grid-gap: 0px;\n  padding-top: 24px;\n  grid-template-columns: repeat(1, 1fr);\n  @media (min-width: ${screenSizes.mediaS}px) {\n    grid-gap: 25px;\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  @media (min-width: ${screenSizes.mediaL}px) {\n    grid-gap: 25px;\n    grid-template-columns: repeat(2, 1fr);\n  }\n  @media (min-width: ${screenSizes.mediaXL}px) {\n    grid-gap: 25px;\n    grid-template-columns: repeat(2, 1fr);\n  }\n`;\n\nexport const SpreadColumns = styled.div`\n  display: flex;\n  flex-direction: column;\n  @media (min-width: ${screenSizes.mediaL}px) {\n    display: flex;\n    flex-direction: row;\n  }\n`;\n","import { css, ThemeProps } from \"styled-components\";\nimport { colors, ThemeStarter, screenSizes } from \"../../styles/theme\";\nimport styled from \"styled-components\";\n\nexport interface ButtonProps {\n  margin?: string;\n  priority?: string;\n  theme: ThemeProps<ThemeStarter>;\n  type?: string;\n  background?: string;\n  color?: string;\n  gradient?: string;\n}\n\nexport const ButtonGroup = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: row;\n  margin-top: 20px;\n`;\n\nconst buttonStyles = css`\n  display: inline-block;\n  opacity: 0.8;\n  margin: ${(props: ButtonProps) => props.margin};\n  background: ${(props: ButtonProps) => props.background};\n  color: ${(props: ButtonProps) => props.color};\n  font-size: 12px;\n  text-align: center;\n  cursor: pointer;\n\n  transition: all 0.1s;\n  padding: 12px 24px 12px;\n  height: 41px;\n  letter-spacing: 0.1em;\n  border: 1px solid #fff;\n  width: 95%;\n  border-radius: 4px;\n  text-transform: uppercase;\n  @media (min-width: ${screenSizes.mediaXL}px) {\n    font-weight: 600;\n    font-size: 12px;\n    line-height: 15px;\n  }\n\n  &:hover {\n    background: rgb(130, 127, 254);\n  }\n\n  &:active {\n    transform: translate(1px, -1px);\n    border: 1px solid #fff;\n  }\n\n  &:disabled {\n    cursor: no-drop;\n    background: #1d1b28;\n    opacity: 0.5;\n    color: white;\n    height: 44px;\n    &:hover {\n      box-shadow: none;\n    }\n    &:after {\n      content: \"\";\n      border: none;\n    }\n  }\n\n  + a {\n    margin-left: 10px;\n    cursor: initial;\n  }\n`;\n\nexport const Button = styled.button<any>`\n  ${buttonStyles}\n`;\n","import React from \"react\";\n\nimport { Logo, ButtonHolders } from \"./style\";\nimport Login from \"../../../modules/login\";\nimport Signup from \"../../../modules/signup\";\nimport { ThreeColumns } from \"../../../shared/styles/styling\";\nimport { Button } from \"../button\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userLogout } from \"../../../Redux/User/actions\";\n\nconst Navbar = (props: any) => {\n  const dispatch = useDispatch();\n  const {loginSuccess} = useSelector((state: any) => state.user)\n  const [show, setShow] = React.useState(\"\");\n  const Close = () => {\n    setShow(\"\");\n  };\n\n  return (\n    <div style={{ marginTop: \"20px\" }}>\n      <ThreeColumns>\n        <div></div>\n        <Logo\n          className=\"header-logo\"\n          src={require(\"../../../assets/images/logo.svg\").default}\n          alt=\"logo\"\n        />\n        <ButtonHolders>\n        {loginSuccess.login === 'success' ?\n        <Button\n            background=\"rgb(162,48,237)\"\n            color=\"white\"\n            onClick={() => dispatch(userLogout()) }\n          >\n            Logout\n          </Button>:\n          <Button\n            background=\"rgb(162,48,237)\"\n            color=\"white\"\n            onClick={() => setShow(\"login\")}\n          >\n            Login\n          </Button>\n        }\n        {loginSuccess? '' : \n          <Button\n            background=\"rgb(110,71,255)\"\n            color=\"white\"\n            onClick={() => setShow(\"signup\")}\n          >\n            Signup\n          </Button>\n        }\n        </ButtonHolders>\n      </ThreeColumns>\n      <Login show={show == \"login\" ? true : false} Close={() => Close()} />\n      <Signup show={show == \"signup\" ? true : false} Close={() => Close()} />\n    </div>\n  );\n};\nexport default Navbar;\n\n","import Navbar from \"./navbar\";\n\nexport default Navbar;\n","import {ThemeProvider} from 'styled-components'\nimport {theme, GlobalStyles} from '../src/shared/styles/theme'\nimport Routes from './shared/components/routes/Routes'\nimport {Toaster} from 'react-hot-toast'\nimport Homepage from './modules/homepage'\nimport Navbar from './shared/components/navbar'\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n      <Navbar />\n      {/* <Routes /> */}\n      <Homepage />\n      <Toaster\n        toastOptions={{\n          success: {\n            border: '1px solid #A230ED',\n            padding: '16px',\n            color: '#A230ED',\n          },\n        }}\n      />\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\n// redux integration\nimport {Provider} from 'react-redux'\nimport {store} from './Redux/Store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}